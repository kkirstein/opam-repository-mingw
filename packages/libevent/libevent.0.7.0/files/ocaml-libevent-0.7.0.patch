--- ./event_stubs.c
+++ ./event_stubs.c
@@ -57,10 +57,10 @@
   return 1;
 }
 
-static long
+static intnat
 struct_event_hash(value v)
 {
-  return (long) struct_event_val(v);
+  return (intnat) struct_event_val(v);
 }
 
 static struct custom_operations struct_event_ops = {
@@ -96,10 +96,10 @@
   return 1;
 }
 
-static long
+static intnat
 struct_event_base_hash(value v)
 {
-  return (long) struct_event_base_val(v);
+  return (intnat) struct_event_base_val(v);
 }
 
 static struct custom_operations struct_event_base_ops = {
@@ -134,7 +134,7 @@
 {
   caml_leave_blocking_section();
   callback3(*event_cb_closure,
-	    Val_long((long) arg), Val_int(fd), Val_int(type));
+      Val_long((intnat) arg), Val_int(fd), Val_int(type));
   caml_enter_blocking_section();
 }
 
@@ -164,7 +164,7 @@
 oc_event_id(value vevent)
 {
   CAMLparam0();
-  CAMLreturn(Val_long((long) struct_event_val(vevent)));
+  CAMLreturn(Val_long((intnat) struct_event_val(vevent)));
 }
 
 CAMLprim value
--- ./Makefile
+++ ./Makefile
@@ -2,20 +2,37 @@
 
 VERSION=0.7.0
 
+EXT_DLL:=$(shell ocamlfind ocamlc -config | awk '/^ext_dll:/ {print $$2}')
+EXT_OBJ:=$(shell ocamlfind ocamlc -config | awk '/^ext_obj:/ {print $$2}')
+EXT_LIB:=$(shell ocamlfind ocamlc -config | awk '/^ext_lib:/ {print $$2}')
+CC:= $(shell ocamlfind ocamlc -config | awk '/^bytecomp_c_compiler/ {for(i=2;i<=NF;i++) printf "%s " ,$$i}')
+OS_SYSTEM:=$(shell ocamlfind ocamlc -config | awk '/^system:/ {print $$2}')
+
 # Change this to match your libevent installation.
 EVENT_LIB=-levent
+
+ifeq ($(OS_SYSTEM),mingw64)
+EVENT_LIBDIR=/usr/x86_64-w64-mingw32/sys-root/mingw/lib
+EVENT_INCDIR=/usr/x86_64-w64-mingw32/sys-root/mingw/include
+else
+ifeq ($(OS_SYSTEM),mingw)
+EVENT_LIBDIR=/usr/i686-w64-mingw32/sys-root/mingw/lib
+EVENT_INCDIR=/usr/i686-w64-mingw32/sys-root/mingw/include
+else
 EVENT_LIBDIR=/usr/local/lib
 EVENT_INCDIR=/usr/local/include
+endif
+endif
 
 NAME=liboevent
 OBJECTS=libevent.cmo
 XOBJECTS=$(OBJECTS:.cmo=.cmx)
-C_OBJECTS=event_stubs.o
+C_OBJECTS=event_stubs$(EXT_OBJ)
 
 ARCHIVE=$(NAME).cma
 XARCHIVE=$(ARCHIVE:.cma=.cmxa)
 CARCHIVE_NAME=mloevent
-CARCHIVE=lib$(CARCHIVE_NAME).a
+CARCHIVE=lib$(CARCHIVE_NAME)$(EXT_LIB)
 
 # Flags for the C compiler.
 CFLAGS=-DFULL_UNROLL -Wall -O2 -I$(EVENT_INCDIR)
@@ -36,7 +53,7 @@
 allopt:  $(XARCHIVE)
 
 depend: *.c *.ml *.mli
-	gcc -MM *.c > depend
+	$(CC) -MM *.c > depend
 	$(OCAMLDEP) *.mli *.ml >> depend
 
 ## Library creation
@@ -53,9 +70,9 @@
 ## Installation
 .PHONY: install
 install:
-	{ test ! -f $(XARCHIVE) || extra="$(XARCHIVE) $(OBJECTS:.cmo=.cmx) $(NAME).a"; }; \
+	{ test ! -f $(XARCHIVE) || extra="$(XARCHIVE) $(OBJECTS:.cmo=.cmx) $(NAME)$(EXT_LIB)"; }; \
 	$(OCAMLFIND) install libevent -patch-version $(VERSION) META $(OBJECTS:.cmo=.cmi) $(OBJECTS:.cmo=.mli) $(ARCHIVE) \
-	dll$(CARCHIVE_NAME).so lib$(CARCHIVE_NAME).a $$extra
+	dll$(CARCHIVE_NAME)$(EXT_DLL) lib$(CARCHIVE_NAME)$(EXT_LIB) $$extra
 
 .PHONY: uninstall
 uninstall:
@@ -85,7 +102,7 @@
 ## Cleaning up
 .PHONY: clean
 clean::
-	rm -f *~ *.cm* *.o *.a *.so doc/*.html doc/*.css depend \
+	rm -f *~ *.cm* *$(EXT_OBJ) *$(EXT_LIB) *$(EXT_DLL) doc/*.html doc/*.css depend \
 	unittest unittest.opt
 
 FORCE:
@@ -98,7 +115,7 @@
 	$(OCAMLC) -c $(COMPLAGS) -nolabels $<
 .ml.cmx:
 	$(OCAMLOPT) -c $(COMPFLAGS) -nolabels $<
-.c.o:
+.c$(EXT_OBJ):
 	$(OCAMLC) -c -ccopt "$(CFLAGS)" $<
 
 include depend
